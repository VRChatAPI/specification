formats:
  - oas3

extends:
  - 'spectral:oas'

functions: [
  print,
  schema_object_name_mismatch_filename,
]

rules:
  oas3-parameter-description: info
  tag-description: hint

  # Rules for sub schema
  info-license: hint
  license-url: hint
  oas3-api-servers: hint
  info-contact: hint

  schema-title:
    given: "$.components.schemas[*]"
    severity: error
    then:
      field: title
      function: truthy

  response-no-inline-schemas:
    given: "$.components.responses[*].content.application/json.schema.type"
    severity: error
    resolved: false
    then:
      function: pattern
      functionOptions:
        notMatch: "object"

  paths-no-inline-responses:
    given: "$.paths[*][get,post,put,delete].responses[*].content.application/json.schema"
    severity: error
    resolved: false
    then:
      function: undefined

  paths-no-inline-requests:
    given: "$.paths[*][get,post,put,delete].requestBody.content.application/json.schema.properties"
    severity: error
    resolved: false
    then:
      function: undefined

  # Fetch ALL objects which have "title", and check if the filename matches the title
  schema-object-name-mismatch-filename:
    # Recursively fetch "json.schema" objects that has a "title" field
    given: "$.paths.[*][get,post,put,delete]..[?(@ != null && @.title)]"
    severity: error
    resolved: true
    then:
      function: schema_object_name_mismatch_filename
