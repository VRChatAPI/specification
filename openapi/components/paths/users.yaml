openapi: 3.0.3
info:
  title: users
  version: '1.0'
  description: A
paths:
  /users:
    get:
      summary: Search All Users
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/LimitedUser.yaml
        '400':
          $ref: ../responses/users/UsersInvalidSearchError.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: searchUsers
      security:
        - apiKeyCookie: []
          authCookie: []
      parameters:
        - schema:
            type: string
            minLength: 0
          in: query
          name: search
          description: Searches by `displayName`. Will return empty array if search query is empty or missing.
        - schema:
            type: string
          in: query
          name: developerType
          description: 'Active user by developer type, none for normal users and internal for moderators'
        - $ref: ../parameters.yaml#/number
        - $ref: ../parameters.yaml#/offset
      description: Search and list any users by text query
  '/users/{username}/name':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Get User by Username
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../schemas/User.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: getUserByName
      security:
        - apiKeyCookie: []
          authCookie: []
      description: Get public user information about a specific user using their name.
  '/users/{userId}':
    parameters:
      - $ref: ../parameters.yaml#/userId
    get:
      summary: Get User by ID
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../schemas/User.yaml
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: getUser
      security:
        - apiKeyCookie: []
          authCookie: []
      description: Get public user information about a specific user using their ID.
    put:
      summary: Update User Info
      operationId: updateUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../schemas/CurrentUser.yaml
      description: Update a users information such as the email and birthday.
      security:
        - apiKeyCookie: []
          authCookie: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                birthday:
                  type: string
                  format: date
                acceptedTOSVersion:
                  type: number
                tags:
                  type: array
                  items:
                    $ref: ../schemas/Tag.yaml
                status:
                  $ref: ../schemas/UserStatus.yaml
                statusDescription:
                  type: string
                bio:
                  type: string
                  minLength: 0
                bioLinks:
                  type: array
                  items:
                    type: string
                userIcon:
                  type: string
                  description: MUST be a valid VRChat /file/ url.
                  example: 'https://api.vrchat.cloud/api/1/file/file_76dc2964-0ce8-41df-b2e7-8edf994fee31/1'
                  minLength: 0
      tags:
        - users
  /users/active:
    get:
      summary: Search Active Users
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../schemas/LimitedUser.yaml
        '403':
          $ref: ../responses/InvalidAdminCredentials.yaml
      operationId: searchActiveUsers
      security:
        - apiKeyCookie: []
          authCookie: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
          required: true
          description: Username to search for
        - schema:
            type: string
          in: query
          name: developerType
          description: 'Active user by developer type, none for normal users and internal for moderators'
        - $ref: ../parameters.yaml#/offset
        - $ref: ../parameters.yaml#/number
      x-internal: true
      deprecated: true
      description: '**REQUIRES ADMIN CREDENTIALS**. Search and list any Active users by text query.'
tags:
  $ref: ../tags.yaml
components:
  securitySchemes:
    $ref: ../securitySchemes.yaml