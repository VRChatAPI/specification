openapi: 3.0.3
info:
  title: permissions
  version: '1.0'
  description: 'Permissions are a way to individually grant specific access to a user, often through a license such as VRC+ subscription.'
paths:
  /auth/permissions:
    get:
      summary: Get Assigned Permission
      operationId: getAssignedPermissions
      responses:
        '200':
          $ref: '#/components/responses/PermissionListResponse'
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      tags:
        - permissions
      description: Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.
    parameters: []
  /permissions:
    get:
      summary: Get Permissions
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/PermissionListResponse'
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: getPermissions
      x-internal: true
      description: '**REQUIRES INTERNAL ADMIN CREDENTIALS**. Returns a list of all existing permissions, just like `/users` with empty search would.'
  '/permissions/{permissionId}':
    parameters:
      - $ref: '#/components/parameters/permissionId'
    get:
      summary: Get Permission
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/PermissionResponse'
        '401':
          $ref: ../responses/MissingCredentialsError.yaml
      operationId: getPermission
      description: 'Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.'
tags:
  $ref: ../../openapi.yaml#/tags
components:
  responses:
    PermissionListResponse:
      description: Returns a list of Permission objects.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../schemas/Permission.yaml
    PermissionResponse:
      description: Returns a single Permission object.
      content:
        application/json:
          schema:
            $ref: ../schemas/Permission.yaml
  parameters:
    permissionId:
      name: permissionId
      in: path
      required: true
      schema:
        type: string
